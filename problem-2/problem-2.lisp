#|
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
|#
	
(defun fibonacci (n)
	(case n
		(0 0)
		(1 1)
		(otherwise (+ (fibonacci (- n 1)) (fibonacci (- n 2))))))		
		
(defun get-while-below (f limit n acc)
	(let ((val (funcall f n)))
		(cond
			((<= val limit) (get-while-below f limit (+ n 1) (append acc (list val))))
			(t acc))))
	
(defun problem-2 (limit)
	(reduce #'+ (remove-if-not #'evenp (get-while-below #'fibonacci limit 0 '()))))
	
(problem-2 4000000)